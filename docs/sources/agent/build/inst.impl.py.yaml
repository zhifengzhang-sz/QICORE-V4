name: "Stage 5: Design to Python Implementation"
description: "Transform design patterns into concrete Python implementations using researched packages"
version: "v4.0.1"
stage: 5
language: "Python"

inputs:
  required_files:
    - path: "design/qi.v4.design.analysis.md"
      description: "Design analysis with complete operation coverage from Stage 2"
    
    - path: "research/qi.v4.py.packages.md"
      description: "Python package research results from Stage 4"
    
    - path: "research/qi.v4.py.wrappers.md"
      description: "Python wrapper specifications from Stage 4"
    
    - path: "sources/guides/common.md"
      description: "Mathematical foundations and categorical structures"
    
    - path: "sources/guides/impl.py.prompt.md"
      description: "Stage 5 Python-specific transformation instructions"

outputs:
  target_files:
    - path: "impl/qi.v4.py.template.md"
      description: "Python code template with runnable examples"
      
    - path: "impl/qi.v4.py.impl.md"
      description: "Python implementation guide with step-by-step instructions"

  project_structure:
    base_path: "src/"
    components:
      - "base/ (Result, QiError)"
      - "core/ (Configuration, Logging, Cache)"
      - "http/ (HTTP client with circuit breaker)"
      - "document/ (Document generation with streaming)"
      - "clp/ (Command-line processing)"

validation:
  method: "Generate verification report using success criteria from sources/guides/impl.prompt.md"
  
  verification_report:
    target_file: "stage3-python-verification-report.md"
    required_sections:
      - "Operation Implementation Verification"
      - "Template Code Quality Verification"
      - "Implementation Guide Completeness Verification"
      - "Mathematical Property Preservation Verification"
      - "Success Criteria Compliance"
    
    format: |
      # Stage 3 Python Verification Report
      
      ## Operation Implementation Verification
      [Check every operation from design analysis has Python implementation]
      
      ## Template Code Quality Verification
      [Verify all code is concrete, runnable, and follows Python best practices]
      
      ## Implementation Guide Completeness Verification
      [Confirm step-by-step instructions are complete and executable]
      
      ## Mathematical Property Preservation Verification
      [Validate categorical laws preserved in Python code structure]
      
      ## Success Criteria Compliance
      [Complete checklist from impl.prompt.md]
      
      ## Overall Assessment
      [Pass/Fail with specific issues if any]

execution:
  instructions_source: "sources/guides/impl.prompt.md"
  context_instruction: "Follow Python-specific methodology and requirements from impl.prompt.md exactly"
  verification_method: "Generate systematic verification report against success criteria" 