#!/usr/bin/env bun

/**
 * Simple test that should actually complete and generate output
 */

import { MathematicalAnalysisAgent } from "./agents/ollama.ts";

async function testSimpleAnalysis() {
  console.log("🧪 Simple Analysis Test");
  console.log("======================\n");

  try {
    // Use small fast model
    const agent = new MathematicalAnalysisAgent({
      provider: "ollama",
      model: "qwen3:0.6b",
      baseURL: "http://localhost:11434"
    });

    console.log("🚀 Agent created");
    console.log("🔍 Running simple analysis...\n");

    // Very simple prompt that should complete quickly
    const result = await agent.analyzeMathematicalContracts(
      "Result<T>", 
      "Result<T> is a type that can be Success(value) or Error(message). It has a flatMap method.",
      { domain: "algebraic_structures", complexity: "undergraduate" }
    );

    console.log("✅ Analysis completed!");
    console.log("📄 Result:");
    console.log("---");
    console.log(result);
    console.log("---\n");

    // Save to file
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    const outputPath = `./output/simple-test-${timestamp}.md`;
    
    const content = `# Simple Analysis Test Result

**Timestamp**: ${new Date().toISOString()}
**Component**: Result<T>
**Agent**: ${agent.getStats().agent}
**Model**: ${agent.getStats().model}

## Analysis Result

${result}

---
*Generated by QiCore Mathematical Analysis Agent*
`;

    await Bun.write(outputPath, content);
    console.log(`📁 Saved to: ${outputPath}`);

  } catch (error) {
    console.error("❌ Test failed:", error.message);
  }
}

if (import.meta.main) {
  testSimpleAnalysis().catch(console.error);
}