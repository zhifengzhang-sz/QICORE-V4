{"numTotalTestSuites":69,"numPassedTestSuites":65,"numFailedTestSuites":4,"numPendingTestSuites":0,"numTotalTests":140,"numPassedTests":134,"numFailedTests":6,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751211194475,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should have Claude Code CLI available","status":"passed","title":"should have Claude Code CLI available","duration":4.6144589999999965,"failureMessages":[],"location":{"line":18,"column":3},"meta":{}},{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should handle non-interactive mode for CI","status":"passed","title":"should handle non-interactive mode for CI","duration":0.2562860000000029,"failureMessages":[],"location":{"line":36,"column":3},"meta":{}},{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should validate JSON output format for automation","status":"passed","title":"should validate JSON output format for automation","duration":0.27908800000000156,"failureMessages":[],"location":{"line":70,"column":3},"meta":{}},{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should handle streaming JSON for real-time monitoring","status":"passed","title":"should handle streaming JSON for real-time monitoring","duration":0.19473800000000097,"failureMessages":[],"location":{"line":100,"column":3},"meta":{}},{"ancestorTitles":["Claude Code Test Environment Validation"],"fullName":"Claude Code Test Environment Validation should validate test environment setup","status":"passed","title":"should validate test environment setup","duration":0.41434699999999225,"failureMessages":[],"location":{"line":144,"column":3},"meta":{}},{"ancestorTitles":["Claude Code Test Environment Validation"],"fullName":"Claude Code Test Environment Validation should handle environment variable configurations","status":"passed","title":"should handle environment variable configurations","duration":0.42351899999999887,"failureMessages":[],"location":{"line":164,"column":3},"meta":{}},{"ancestorTitles":["Claude Code Test Environment Validation"],"fullName":"Claude Code Test Environment Validation should validate timeout configurations","status":"passed","title":"should validate timeout configurations","duration":0.15695900000000051,"failureMessages":[],"location":{"line":181,"column":3},"meta":{}}],"startTime":1751211194775,"endTime":1751211194781.4236,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/integration/claude-code-ci.test.ts"},{"assertionResults":[{"ancestorTitles":["Claude Code SDK Integration","API Key Validation"],"fullName":"Claude Code SDK Integration API Key Validation should identify missing API keys","status":"passed","title":"should identify missing API keys","duration":1.4276179999999954,"failureMessages":[],"location":{"line":33,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Connection Testing"],"fullName":"Claude Code SDK Integration Connection Testing should test connection appropriately based on API key availability","status":"passed","title":"should test connection appropriately based on API key availability","duration":0.6271520000000095,"failureMessages":[],"location":{"line":45,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Generation (Integration)"],"fullName":"Claude Code SDK Integration Code Generation (Integration) should handle missing API key gracefully","status":"passed","title":"should handle missing API key gracefully","duration":0.453598999999997,"failureMessages":[],"location":{"line":63,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Generation (Integration)"],"fullName":"Claude Code SDK Integration Code Generation (Integration) should generate valid GeneratedCode structure","status":"passed","title":"should generate valid GeneratedCode structure","duration":0.5196940000000012,"failureMessages":[],"location":{"line":85,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Generation (Integration)"],"fullName":"Claude Code SDK Integration Code Generation (Integration) should handle unsupported provider","status":"passed","title":"should handle unsupported provider","duration":0.2374109999999945,"failureMessages":[],"location":{"line":110,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Processing Functions"],"fullName":"Claude Code SDK Integration Code Processing Functions should properly extract content from various message formats","status":"passed","title":"should properly extract content from various message formats","duration":0.21791899999999487,"failureMessages":[],"location":{"line":125,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Processing Functions"],"fullName":"Claude Code SDK Integration Code Processing Functions should handle timeout scenarios gracefully","status":"passed","title":"should handle timeout scenarios gracefully","duration":0.21338499999998817,"failureMessages":[],"location":{"line":137,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Research Data Integrity"],"fullName":"Claude Code SDK Integration Research Data Integrity should maintain consistent metadata collection","status":"passed","title":"should maintain consistent metadata collection","duration":0.3447610000000054,"failureMessages":[],"location":{"line":151,"column":5},"meta":{}}],"startTime":1751211195754,"endTime":1751211195758.3447,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/integration/claude-code-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should have required environment variables for testing","status":"passed","title":"should have required environment variables for testing","duration":1.2255400000000236,"failureMessages":[],"location":{"line":33,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should validate model configuration structure","status":"passed","title":"should validate model configuration structure","duration":0.5141639999999938,"failureMessages":[],"location":{"line":49,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should validate instruction structure","status":"passed","title":"should validate instruction structure","duration":0.3417739999999867,"failureMessages":[],"location":{"line":57,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should handle timeout scenarios gracefully","status":"passed","title":"should handle timeout scenarios gracefully","duration":1002.543084,"failureMessages":[],"location":{"line":64,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should validate error handling patterns","status":"passed","title":"should validate error handling patterns","duration":0.276012000000037,"failureMessages":[],"location":{"line":78,"column":3},"meta":{}}],"startTime":1751211194639,"endTime":1751211195644.2761,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/integration/claude-code-sdk.test.ts"},{"assertionResults":[{"ancestorTitles":["QiAgent - Validation","validateGenerationRequest"],"fullName":"QiAgent - Validation validateGenerationRequest should accept valid generation request","status":"passed","title":"should accept valid generation request","duration":1.8654640000000313,"failureMessages":[],"location":{"line":69,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Validation","validateGenerationRequest"],"fullName":"QiAgent - Validation validateGenerationRequest should reject empty user prompt","status":"passed","title":"should reject empty user prompt","duration":0.35064699999998084,"failureMessages":[],"location":{"line":77,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Validation","validateGenerationRequest"],"fullName":"QiAgent - Validation validateGenerationRequest should reject missing model configuration","status":"passed","title":"should reject missing model configuration","duration":0.3024730000000204,"failureMessages":[],"location":{"line":87,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Validation","validateGenerationRequest"],"fullName":"QiAgent - Validation validateGenerationRequest should reject invalid temperature","status":"passed","title":"should reject invalid temperature","duration":0.1559869999999819,"failureMessages":[],"location":{"line":99,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Validation","validateGenerationRequest"],"fullName":"QiAgent - Validation validateGenerationRequest should reject invalid max tokens","status":"passed","title":"should reject invalid max tokens","duration":0.4580169999999839,"failureMessages":[],"location":{"line":114,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createClaudeCodeAgent"],"fullName":"QiAgent - Agent Creation createClaudeCodeAgent should create agent with valid configuration","status":"passed","title":"should create agent with valid configuration","duration":0.445953999999972,"failureMessages":[],"location":{"line":138,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createClaudeCodeAgent"],"fullName":"QiAgent - Agent Creation createClaudeCodeAgent should provide correct provider info","status":"passed","title":"should provide correct provider info","duration":0.43936299999995754,"failureMessages":[],"location":{"line":150,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createClaudeCodeAgent"],"fullName":"QiAgent - Agent Creation createClaudeCodeAgent should validate configuration correctly","status":"passed","title":"should validate configuration correctly","duration":0.15443299999998317,"failureMessages":[],"location":{"line":161,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createClaudeCodeAgent"],"fullName":"QiAgent - Agent Creation createClaudeCodeAgent should reject invalid provider in config","status":"passed","title":"should reject invalid provider in config","duration":0.19954099999995378,"failureMessages":[],"location":{"line":169,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createClaudeCodeAgent"],"fullName":"QiAgent - Agent Creation createClaudeCodeAgent should start with healthy status","status":"passed","title":"should start with healthy status","duration":0.1916180000000054,"failureMessages":[],"location":{"line":179,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createClaudeCodeAgent"],"fullName":"QiAgent - Agent Creation createClaudeCodeAgent should start with zero metrics","status":"passed","title":"should start with zero metrics","duration":0.15126800000001595,"failureMessages":[],"location":{"line":187,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createOpenAIAgent"],"fullName":"QiAgent - Agent Creation createOpenAIAgent should create agent with valid configuration","status":"passed","title":"should create agent with valid configuration","duration":0.49059900000003154,"failureMessages":[],"location":{"line":200,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createLocalAgent"],"fullName":"QiAgent - Agent Creation createLocalAgent should create agent with valid configuration","status":"passed","title":"should create agent with valid configuration","duration":0.17109599999997727,"failureMessages":[],"location":{"line":210,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Agent Creation","createLocalAgent"],"fullName":"QiAgent - Agent Creation createLocalAgent should validate endpoint requirement","status":"passed","title":"should validate endpoint requirement","duration":0.1501220000000103,"failureMessages":[],"location":{"line":218,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Circuit Breaker Integration"],"fullName":"QiAgent - Circuit Breaker Integration should handle multiple failures and open circuit","status":"passed","title":"should handle multiple failures and open circuit","duration":5805.579709,"failureMessages":[],"location":{"line":235,"column":3},"meta":{}},{"ancestorTitles":["QiAgent - Rate Limiting Integration"],"fullName":"QiAgent - Rate Limiting Integration should enforce rate limits","status":"passed","title":"should enforce rate limits","duration":5720.608286,"failureMessages":[],"location":{"line":268,"column":3},"meta":{}},{"ancestorTitles":["QiAgent - Property-Based Tests","Agent Configuration Properties"],"fullName":"QiAgent - Property-Based Tests Agent Configuration Properties should create valid agents for any supported provider","status":"passed","title":"should create valid agents for any supported provider","duration":7.082600000001548,"failureMessages":[],"location":{"line":302,"column":5},"meta":{}},{"ancestorTitles":["QiAgent - Performance Tests"],"fullName":"QiAgent - Performance Tests should create agents within performance requirements","status":"passed","title":"should create agents within performance requirements","duration":0.21508299999914016,"failureMessages":[],"location":{"line":347,"column":3},"meta":{}},{"ancestorTitles":["QiAgent - Performance Tests"],"fullName":"QiAgent - Performance Tests should validate requests within performance requirements","status":"passed","title":"should validate requests within performance requirements","duration":0.13123199999972712,"failureMessages":[],"location":{"line":361,"column":3},"meta":{}},{"ancestorTitles":["QiAgent - Performance Tests"],"fullName":"QiAgent - Performance Tests should handle concurrent validation efficiently","status":"passed","title":"should handle concurrent validation efficiently","duration":0.35946399999920686,"failureMessages":[],"location":{"line":375,"column":3},"meta":{}},{"ancestorTitles":["QiAgent - Error Handling"],"fullName":"QiAgent - Error Handling should properly categorize different error types","status":"passed","title":"should properly categorize different error types","duration":0.21331300000019837,"failureMessages":[],"location":{"line":399,"column":3},"meta":{}},{"ancestorTitles":["QiAgent - Error Handling"],"fullName":"QiAgent - Error Handling should provide detailed error context","status":"passed","title":"should provide detailed error context","duration":0.1663799999987532,"failureMessages":[],"location":{"line":412,"column":3},"meta":{}}],"startTime":1751211194918,"endTime":1751211206459.1663,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiagent.test.ts"},{"assertionResults":[{"ancestorTitles":["QiPrompt - Prompt Building","buildSystemPrompt"],"fullName":"QiPrompt - Prompt Building buildSystemPrompt should build system prompt with model and instruction details","status":"passed","title":"should build system prompt with model and instruction details","duration":1.2046499999999867,"failureMessages":[],"location":{"line":74,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Prompt Building","buildSystemPrompt"],"fullName":"QiPrompt - Prompt Building buildSystemPrompt should handle model with minimal information","status":"passed","title":"should handle model with minimal information","duration":0.2784679999999753,"failureMessages":[],"location":{"line":89,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Prompt Building","buildPromptWithContext"],"fullName":"QiPrompt - Prompt Building buildPromptWithContext should build prompt with instruction content and requirements","status":"passed","title":"should build prompt with instruction content and requirements","duration":0.26474600000000237,"failureMessages":[],"location":{"line":119,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Prompt Building","buildPromptWithContext"],"fullName":"QiPrompt - Prompt Building buildPromptWithContext should handle different programming languages","status":"passed","title":"should handle different programming languages","duration":0.11076300000001993,"failureMessages":[],"location":{"line":131,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Prompt Building","buildCompletePrompt"],"fullName":"QiPrompt - Prompt Building buildCompletePrompt should build complete prompt with system and user prompts","status":"passed","title":"should build complete prompt with system and user prompts","duration":0.308887000000027,"failureMessages":[],"location":{"line":153,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Prompt Building","buildCompletePrompt"],"fullName":"QiPrompt - Prompt Building buildCompletePrompt should build prompt without system prompt when disabled","status":"passed","title":"should build prompt without system prompt when disabled","duration":0.16854399999999714,"failureMessages":[],"location":{"line":168,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Prompt Building","buildCompletePrompt"],"fullName":"QiPrompt - Prompt Building buildCompletePrompt should fail with invalid model","status":"passed","title":"should fail with invalid model","duration":0.20533599999998842,"failureMessages":[],"location":{"line":187,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Prompt Building","buildCompletePrompt"],"fullName":"QiPrompt - Prompt Building buildCompletePrompt should fail with invalid instruction","status":"passed","title":"should fail with invalid instruction","duration":0.1317070000000058,"failureMessages":[],"location":{"line":200,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractCodeFromResponse"],"fullName":"QiPrompt - Content Extraction extractCodeFromResponse should extract code from markdown code blocks","status":"passed","title":"should extract code from markdown code blocks","duration":0.28162799999998356,"failureMessages":[],"location":{"line":222,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractCodeFromResponse"],"fullName":"QiPrompt - Content Extraction extractCodeFromResponse should extract code from code block without language","status":"passed","title":"should extract code from code block without language","duration":0.14438499999999976,"failureMessages":[],"location":{"line":240,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractCodeFromResponse"],"fullName":"QiPrompt - Content Extraction extractCodeFromResponse should handle multiple code blocks and take the first one","status":"passed","title":"should handle multiple code blocks and take the first one","duration":0.11253600000000574,"failureMessages":[],"location":{"line":252,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractCodeFromResponse"],"fullName":"QiPrompt - Content Extraction extractCodeFromResponse should return trimmed content when no code blocks exist","status":"passed","title":"should return trimmed content when no code blocks exist","duration":0.08308199999999033,"failureMessages":[],"location":{"line":266,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractCodeFromResponse"],"fullName":"QiPrompt - Content Extraction extractCodeFromResponse should handle empty response","status":"passed","title":"should handle empty response","duration":0.07631900000001224,"failureMessages":[],"location":{"line":280,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractCodeFromResponse"],"fullName":"QiPrompt - Content Extraction extractCodeFromResponse should handle whitespace-only response","status":"passed","title":"should handle whitespace-only response","duration":0.07539900000000443,"failureMessages":[],"location":{"line":285,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractReasoning"],"fullName":"QiPrompt - Content Extraction extractReasoning should extract reasoning from \"thinking:\" pattern","status":"passed","title":"should extract reasoning from \"thinking:\" pattern","duration":0.26944800000001123,"failureMessages":[],"location":{"line":292,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractReasoning"],"fullName":"QiPrompt - Content Extraction extractReasoning should extract reasoning from \"my approach\" pattern","status":"passed","title":"should extract reasoning from \"my approach\" pattern","duration":0.25297699999998713,"failureMessages":[],"location":{"line":306,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractReasoning"],"fullName":"QiPrompt - Content Extraction extractReasoning should extract reasoning from \"let me\" pattern","status":"passed","title":"should extract reasoning from \"let me\" pattern","duration":0.18893399999998906,"failureMessages":[],"location":{"line":316,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractReasoning"],"fullName":"QiPrompt - Content Extraction extractReasoning should return empty string when no reasoning patterns found","status":"passed","title":"should return empty string when no reasoning patterns found","duration":0.11907999999999674,"failureMessages":[],"location":{"line":326,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","extractReasoning"],"fullName":"QiPrompt - Content Extraction extractReasoning should handle empty response","status":"passed","title":"should handle empty response","duration":0.11229900000000725,"failureMessages":[],"location":{"line":336,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","cleanGeneratedCode"],"fullName":"QiPrompt - Content Extraction cleanGeneratedCode should remove leading and trailing newlines","status":"passed","title":"should remove leading and trailing newlines","duration":0.2041420000000187,"failureMessages":[],"location":{"line":344,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","cleanGeneratedCode"],"fullName":"QiPrompt - Content Extraction cleanGeneratedCode should convert tabs to spaces","status":"passed","title":"should convert tabs to spaces","duration":0.1434330000000159,"failureMessages":[],"location":{"line":352,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","cleanGeneratedCode"],"fullName":"QiPrompt - Content Extraction cleanGeneratedCode should handle mixed whitespace","status":"passed","title":"should handle mixed whitespace","duration":0.11919100000000071,"failureMessages":[],"location":{"line":360,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","cleanGeneratedCode"],"fullName":"QiPrompt - Content Extraction cleanGeneratedCode should handle empty code","status":"passed","title":"should handle empty code","duration":0.11462099999999964,"failureMessages":[],"location":{"line":368,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Content Extraction","cleanGeneratedCode"],"fullName":"QiPrompt - Content Extraction cleanGeneratedCode should handle whitespace-only code","status":"passed","title":"should handle whitespace-only code","duration":0.11224599999999896,"failureMessages":[],"location":{"line":373,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should validate valid model","status":"passed","title":"should validate valid model","duration":0.3694110000000137,"failureMessages":[],"location":{"line":387,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should fail validation for empty model ID","status":"failed","title":"should fail validation for empty model ID","duration":1.4582880000000102,"failureMessages":["AssertionError: expected undefined to be 'model.id' // Object.is equality\n    at /home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiprompt.test.ts:407:45\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"location":{"line":398,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should fail validation for whitespace-only model ID","status":"passed","title":"should fail validation for whitespace-only model ID","duration":0.23417100000000346,"failureMessages":[],"location":{"line":411,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should fail validation for empty model name","status":"failed","title":"should fail validation for empty model name","duration":0.4911249999999825,"failureMessages":["AssertionError: expected undefined to be 'model.modelName' // Object.is equality\n    at /home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiprompt.test.ts:427:45\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"location":{"line":419,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should fail validation for invalid temperature (too low)","status":"failed","title":"should fail validation for invalid temperature (too low)","duration":0.4822720000000231,"failureMessages":["AssertionError: expected undefined to be 'model.temperature' // Object.is equality\n    at /home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiprompt.test.ts:439:45\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"location":{"line":431,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should fail validation for invalid temperature (too high)","status":"passed","title":"should fail validation for invalid temperature (too high)","duration":0.18685299999998506,"failureMessages":[],"location":{"line":443,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should accept valid temperature bounds","status":"passed","title":"should accept valid temperature bounds","duration":0.20571300000000292,"failureMessages":[],"location":{"line":451,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateModelForPrompt"],"fullName":"QiPrompt - Validation validateModelForPrompt should accept model without temperature","status":"passed","title":"should accept model without temperature","duration":0.21017399999999498,"failureMessages":[],"location":{"line":459,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateInstructionForPrompt"],"fullName":"QiPrompt - Validation validateInstructionForPrompt should validate valid instruction","status":"passed","title":"should validate valid instruction","duration":0.2325700000000097,"failureMessages":[],"location":{"line":471,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateInstructionForPrompt"],"fullName":"QiPrompt - Validation validateInstructionForPrompt should fail validation for empty instruction ID","status":"failed","title":"should fail validation for empty instruction ID","duration":0.3997160000000122,"failureMessages":["AssertionError: expected undefined to be 'instruction.id' // Object.is equality\n    at /home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiprompt.test.ts:490:45\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"location":{"line":482,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateInstructionForPrompt"],"fullName":"QiPrompt - Validation validateInstructionForPrompt should fail validation for empty instruction content","status":"failed","title":"should fail validation for empty instruction content","duration":0.44036400000001663,"failureMessages":["AssertionError: expected undefined to be 'instruction.content' // Object.is equality\n    at /home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiprompt.test.ts:502:45\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"location":{"line":494,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateInstructionForPrompt"],"fullName":"QiPrompt - Validation validateInstructionForPrompt should fail validation for empty instruction language","status":"failed","title":"should fail validation for empty instruction language","duration":0.3967169999999953,"failureMessages":["AssertionError: expected undefined to be 'instruction.language' // Object.is equality\n    at /home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiprompt.test.ts:514:45\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"location":{"line":506,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Validation","validateInstructionForPrompt"],"fullName":"QiPrompt - Validation validateInstructionForPrompt should fail validation for whitespace-only fields","status":"passed","title":"should fail validation for whitespace-only fields","duration":0.1991310000000226,"failureMessages":[],"location":{"line":518,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Configuration","createDefaultPromptConfig"],"fullName":"QiPrompt - Configuration createDefaultPromptConfig should create default configuration","status":"passed","title":"should create default configuration","duration":0.2796769999999924,"failureMessages":[],"location":{"line":535,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Configuration","createDefaultPromptConfig"],"fullName":"QiPrompt - Configuration createDefaultPromptConfig should create immutable configuration","status":"passed","title":"should create immutable configuration","duration":2.699589000000003,"failureMessages":[],"location":{"line":544,"column":5},"meta":{}},{"ancestorTitles":["QiPrompt - Complete API"],"fullName":"QiPrompt - Complete API should expose all expected functions","status":"passed","title":"should expose all expected functions","duration":0.32152099999998995,"failureMessages":[],"location":{"line":561,"column":3},"meta":{}},{"ancestorTitles":["QiPrompt - Complete API"],"fullName":"QiPrompt - Complete API should have all functions as readonly","status":"passed","title":"should have all functions as readonly","duration":0.16896500000001424,"failureMessages":[],"location":{"line":573,"column":3},"meta":{}},{"ancestorTitles":["QiPrompt - Integration"],"fullName":"QiPrompt - Integration should handle complete prompt generation workflow","status":"passed","title":"should handle complete prompt generation workflow","duration":0.20081899999999564,"failureMessages":[],"location":{"line":586,"column":3},"meta":{}},{"ancestorTitles":["QiPrompt - Integration"],"fullName":"QiPrompt - Integration should handle error scenarios gracefully","status":"passed","title":"should handle error scenarios gracefully","duration":0.18445900000000393,"failureMessages":[],"location":{"line":622,"column":3},"meta":{}}],"startTime":1751211194682,"endTime":1751211194697.1846,"status":"failed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/modules/qiprompt.test.ts"},{"assertionResults":[{"ancestorTitles":["ImplementationScorer","Contract Compliance (40% weight)"],"fullName":"ImplementationScorer Contract Compliance (40% weight) should give high score for complete QiCore implementation","status":"passed","title":"should give high score for complete QiCore implementation","duration":1.738552999999996,"failureMessages":[],"location":{"line":21,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Contract Compliance (40% weight)"],"fullName":"ImplementationScorer Contract Compliance (40% weight) should give low score for missing core types","status":"passed","title":"should give low score for missing core types","duration":0.5092110000000076,"failureMessages":[],"location":{"line":62,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Contract Compliance (40% weight)"],"fullName":"ImplementationScorer Contract Compliance (40% weight) should detect missing Result operations","status":"passed","title":"should detect missing Result operations","duration":0.26718300000000283,"failureMessages":[],"location":{"line":72,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Modernity (20% weight)"],"fullName":"ImplementationScorer Modernity (20% weight) should reward modern Haskell features","status":"passed","title":"should reward modern Haskell features","duration":0.21522699999999872,"failureMessages":[],"location":{"line":86,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Modernity (20% weight)"],"fullName":"ImplementationScorer Modernity (20% weight) should penalize old-style Haskell","status":"passed","title":"should penalize old-style Haskell","duration":0.13472699999999804,"failureMessages":[],"location":{"line":107,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Completeness (30% weight)"],"fullName":"ImplementationScorer Completeness (30% weight) should reward comprehensive function coverage","status":"passed","title":"should reward comprehensive function coverage","duration":0.13444599999999696,"failureMessages":[],"location":{"line":122,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Completeness (30% weight)"],"fullName":"ImplementationScorer Completeness (30% weight) should penalize minimal implementations","status":"passed","title":"should penalize minimal implementations","duration":0.11455399999999827,"failureMessages":[],"location":{"line":138,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Quality (10% weight)"],"fullName":"ImplementationScorer Quality (10% weight) should reward comprehensive documentation","status":"passed","title":"should reward comprehensive documentation","duration":0.13761500000001092,"failureMessages":[],"location":{"line":150,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Quality (10% weight)"],"fullName":"ImplementationScorer Quality (10% weight) should detect poor code quality","status":"passed","title":"should detect poor code quality","duration":0.19263599999999315,"failureMessages":[],"location":{"line":171,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Edge Cases"],"fullName":"ImplementationScorer Edge Cases should handle empty code","status":"passed","title":"should handle empty code","duration":0.26624999999999943,"failureMessages":[],"location":{"line":185,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Edge Cases"],"fullName":"ImplementationScorer Edge Cases should handle invalid Haskell syntax","status":"passed","title":"should handle invalid Haskell syntax","duration":0.15130499999999358,"failureMessages":[],"location":{"line":194,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Edge Cases"],"fullName":"ImplementationScorer Edge Cases should handle very large code files","status":"passed","title":"should handle very large code files","duration":0.18569400000001224,"failureMessages":[],"location":{"line":200,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Score Ranges and Weights"],"fullName":"ImplementationScorer Score Ranges and Weights all scores should be between 0 and 100","status":"passed","title":"all scores should be between 0 and 100","duration":0.19134299999998916,"failureMessages":[],"location":{"line":209,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Score Ranges and Weights"],"fullName":"ImplementationScorer Score Ranges and Weights should calculate weighted average correctly","status":"passed","title":"should calculate weighted average correctly","duration":0.11249199999998893,"failureMessages":[],"location":{"line":225,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Money-Saving Validation Tests"],"fullName":"ImplementationScorer Money-Saving Validation Tests scorer should not crash on realistic generated code","status":"passed","title":"scorer should not crash on realistic generated code","duration":0.14056700000000433,"failureMessages":[],"location":{"line":241,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Money-Saving Validation Tests"],"fullName":"ImplementationScorer Money-Saving Validation Tests should differentiate between good and bad implementations","status":"passed","title":"should differentiate between good and bad implementations","duration":0.11104999999999166,"failureMessages":[],"location":{"line":270,"column":5},"meta":{}}],"startTime":1751211194955,"endTime":1751211194960.111,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/evaluation/implementation-scorer.test.ts"},{"assertionResults":[{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should initialize with API keys from environment","status":"passed","title":"should initialize with API keys from environment","duration":2.129252000000008,"failureMessages":[],"location":{"line":42,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should handle missing API keys","status":"passed","title":"should handle missing API keys","duration":0.36801900000000387,"failureMessages":[],"location":{"line":50,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should handle empty API keys","status":"passed","title":"should handle empty API keys","duration":0.28235600000000716,"failureMessages":[],"location":{"line":61,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should handle partial API key availability","status":"passed","title":"should handle partial API key availability","duration":0.3046449999999936,"failureMessages":[],"location":{"line":71,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","getAvailableModels"],"fullName":"AICodeGenerator Utilities getAvailableModels should return array of available provider strings","status":"passed","title":"should return array of available provider strings","duration":0.19716700000000742,"failureMessages":[],"location":{"line":84,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","getAvailableModels"],"fullName":"AICodeGenerator Utilities getAvailableModels should include anthropic when API key is available","status":"passed","title":"should include anthropic when API key is available","duration":0.26664399999999944,"failureMessages":[],"location":{"line":91,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","getAvailableModels"],"fullName":"AICodeGenerator Utilities getAvailableModels should include openai when API key is available","status":"passed","title":"should include openai when API key is available","duration":0.21001599999999598,"failureMessages":[],"location":{"line":96,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Input Validation"],"fullName":"AICodeGenerator Utilities Input Validation should handle unsupported provider in generateCode","status":"passed","title":"should handle unsupported provider in generateCode","duration":0.5475339999999989,"failureMessages":[],"location":{"line":103,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Input Validation"],"fullName":"AICodeGenerator Utilities Input Validation should validate model structure","status":"passed","title":"should validate model structure","duration":0.39304100000001085,"failureMessages":[],"location":{"line":120,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Input Validation"],"fullName":"AICodeGenerator Utilities Input Validation should validate instruction structure","status":"passed","title":"should validate instruction structure","duration":0.2685480000000098,"failureMessages":[],"location":{"line":129,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Error Handling"],"fullName":"AICodeGenerator Utilities Error Handling should handle missing Anthropic API key gracefully","status":"passed","title":"should handle missing Anthropic API key gracefully","duration":0.3750699999999938,"failureMessages":[],"location":{"line":139,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Error Handling"],"fullName":"AICodeGenerator Utilities Error Handling should handle missing OpenAI API key gracefully","status":"passed","title":"should handle missing OpenAI API key gracefully","duration":0.30062300000000164,"failureMessages":[],"location":{"line":159,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Error Handling"],"fullName":"AICodeGenerator Utilities Error Handling should preserve error context in failed results","status":"passed","title":"should preserve error context in failed results","duration":0.3054750000000013,"failureMessages":[],"location":{"line":183,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Result Structure Validation"],"fullName":"AICodeGenerator Utilities Result Structure Validation should return proper GeneratedCode structure for errors","status":"passed","title":"should return proper GeneratedCode structure for errors","duration":0.36981500000000267,"failureMessages":[],"location":{"line":203,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Result Structure Validation"],"fullName":"AICodeGenerator Utilities Result Structure Validation should generate valid timestamps","status":"passed","title":"should generate valid timestamps","duration":1.9679469999999952,"failureMessages":[],"location":{"line":232,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Result Structure Validation"],"fullName":"AICodeGenerator Utilities Result Structure Validation should measure execution duration","status":"passed","title":"should measure execution duration","duration":0.3547850000000068,"failureMessages":[],"location":{"line":243,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Metadata Collection"],"fullName":"AICodeGenerator Utilities Metadata Collection should collect comprehensive metadata for all cases","status":"passed","title":"should collect comprehensive metadata for all cases","duration":0.2928440000000023,"failureMessages":[],"location":{"line":257,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Metadata Collection"],"fullName":"AICodeGenerator Utilities Metadata Collection should handle optional metadata fields","status":"passed","title":"should handle optional metadata fields","duration":0.2542279999999977,"failureMessages":[],"location":{"line":272,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Performance and Reliability"],"fullName":"AICodeGenerator Utilities Performance and Reliability should handle multiple rapid calls","status":"passed","title":"should handle multiple rapid calls","duration":0.4260799999999989,"failureMessages":[],"location":{"line":289,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Performance and Reliability"],"fullName":"AICodeGenerator Utilities Performance and Reliability should maintain isolation between calls","status":"passed","title":"should maintain isolation between calls","duration":0.35706399999999405,"failureMessages":[],"location":{"line":311,"column":5},"meta":{}}],"startTime":1751211194830,"endTime":1751211194841.3572,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/generators/ai-generator-utils.test.ts"},{"assertionResults":[{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect all-zero scores pattern","status":"passed","title":"should detect all-zero scores pattern","duration":1.1423800000000028,"failureMessages":[],"location":{"line":6,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect identical scores pattern","status":"passed","title":"should detect identical scores pattern","duration":0.3188159999999982,"failureMessages":[],"location":{"line":11,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect invalid score ranges","status":"passed","title":"should detect invalid score ranges","duration":0.6591039999999992,"failureMessages":[],"location":{"line":18,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should calculate failure rate correctly","status":"passed","title":"should calculate failure rate correctly","duration":0.1930799999999948,"failureMessages":[],"location":{"line":25,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should calculate standard deviation for variance detection","status":"passed","title":"should calculate standard deviation for variance detection","duration":0.223866000000001,"failureMessages":[],"location":{"line":34,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should pass normal score distributions","status":"passed","title":"should pass normal score distributions","duration":0.26609100000000296,"failureMessages":[],"location":{"line":44,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect suspicious low variance with low scores","status":"passed","title":"should detect suspicious low variance with low scores","duration":0.1920159999999953,"failureMessages":[],"location":{"line":66,"column":3},"meta":{}}],"startTime":1751211206573,"endTime":1751211206576.266,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/runners/circuit-breaker.test.ts"},{"assertionResults":[{"ancestorTitles":["Study Type Validation","studyConfigSchema"],"fullName":"Study Type Validation studyConfigSchema should validate a complete study configuration","status":"passed","title":"should validate a complete study configuration","duration":2.204983999999996,"failureMessages":[],"location":{"line":18,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyConfigSchema"],"fullName":"Study Type Validation studyConfigSchema should reject configuration with invalid runs per combination","status":"passed","title":"should reject configuration with invalid runs per combination","duration":1.0479210000000023,"failureMessages":[],"location":{"line":55,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyConfigSchema"],"fullName":"Study Type Validation studyConfigSchema should use default values for optional fields","status":"passed","title":"should use default values for optional fields","duration":0.41720300000000066,"failureMessages":[],"location":{"line":89,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","aiModelSchema"],"fullName":"Study Type Validation aiModelSchema should validate standard AI model configurations","status":"passed","title":"should validate standard AI model configurations","duration":0.2142470000000003,"failureMessages":[],"location":{"line":124,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","aiModelSchema"],"fullName":"Study Type Validation aiModelSchema should reject model with invalid provider","status":"passed","title":"should reject model with invalid provider","duration":0.2722129999999936,"failureMessages":[],"location":{"line":152,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","instructionSetSchema"],"fullName":"Study Type Validation instructionSetSchema should validate instruction set with file path","status":"passed","title":"should validate instruction set with file path","duration":0.155146000000002,"failureMessages":[],"location":{"line":172,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","instructionSetSchema"],"fullName":"Study Type Validation instructionSetSchema should validate instruction set with inline content","status":"passed","title":"should validate instruction set with inline content","duration":0.12648400000000493,"failureMessages":[],"location":{"line":190,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","qualityScoresSchema"],"fullName":"Study Type Validation qualityScoresSchema should validate quality scores within valid range","status":"passed","title":"should validate quality scores within valid range","duration":0.3186450000000036,"failureMessages":[],"location":{"line":211,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","qualityScoresSchema"],"fullName":"Study Type Validation qualityScoresSchema should reject scores outside valid range","status":"passed","title":"should reject scores outside valid range","duration":0.3719030000000032,"failureMessages":[],"location":{"line":234,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","generationResultSchema"],"fullName":"Study Type Validation generationResultSchema should validate complete generation result","status":"passed","title":"should validate complete generation result","duration":0.49237200000001735,"failureMessages":[],"location":{"line":259,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyStatisticsSchema"],"fullName":"Study Type Validation studyStatisticsSchema should validate comprehensive study statistics","status":"passed","title":"should validate comprehensive study statistics","duration":0.4787110000000041,"failureMessages":[],"location":{"line":306,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyStatisticsSchema"],"fullName":"Study Type Validation studyStatisticsSchema should reject invalid statistics","status":"passed","title":"should reject invalid statistics","duration":0.2621460000000013,"failureMessages":[],"location":{"line":358,"column":5},"meta":{}}],"startTime":1751211194658,"endTime":1751211194664.4788,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/types/study.test.ts"}]}