{"numTotalTestSuites":40,"numPassedTestSuites":40,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":75,"numPassedTests":75,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751098524244,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should have Claude Code CLI available","status":"passed","title":"should have Claude Code CLI available","duration":4.7246780000000115,"failureMessages":[],"location":{"line":18,"column":3},"meta":{}},{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should handle non-interactive mode for CI","status":"passed","title":"should handle non-interactive mode for CI","duration":0.2756339999999966,"failureMessages":[],"location":{"line":36,"column":3},"meta":{}},{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should validate JSON output format for automation","status":"passed","title":"should validate JSON output format for automation","duration":0.30119600000000446,"failureMessages":[],"location":{"line":70,"column":3},"meta":{}},{"ancestorTitles":["Claude Code CI/CD Integration"],"fullName":"Claude Code CI/CD Integration should handle streaming JSON for real-time monitoring","status":"passed","title":"should handle streaming JSON for real-time monitoring","duration":0.17062000000001376,"failureMessages":[],"location":{"line":100,"column":3},"meta":{}},{"ancestorTitles":["Claude Code Test Environment Validation"],"fullName":"Claude Code Test Environment Validation should validate test environment setup","status":"passed","title":"should validate test environment setup","duration":0.2500740000000121,"failureMessages":[],"location":{"line":144,"column":3},"meta":{}},{"ancestorTitles":["Claude Code Test Environment Validation"],"fullName":"Claude Code Test Environment Validation should handle environment variable configurations","status":"passed","title":"should handle environment variable configurations","duration":0.31842100000000073,"failureMessages":[],"location":{"line":164,"column":3},"meta":{}},{"ancestorTitles":["Claude Code Test Environment Validation"],"fullName":"Claude Code Test Environment Validation should validate timeout configurations","status":"passed","title":"should validate timeout configurations","duration":0.1898520000000019,"failureMessages":[],"location":{"line":181,"column":3},"meta":{}}],"startTime":1751098524400,"endTime":1751098524406.3184,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/integration/claude-code-ci.test.ts"},{"assertionResults":[{"ancestorTitles":["Claude Code SDK Integration","API Key Validation"],"fullName":"Claude Code SDK Integration API Key Validation should identify missing API keys","status":"passed","title":"should identify missing API keys","duration":1.255783000000008,"failureMessages":[],"location":{"line":33,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Connection Testing"],"fullName":"Claude Code SDK Integration Connection Testing should test connection appropriately based on API key availability","status":"passed","title":"should test connection appropriately based on API key availability","duration":0.5311080000000175,"failureMessages":[],"location":{"line":45,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Generation (Integration)"],"fullName":"Claude Code SDK Integration Code Generation (Integration) should handle missing API key gracefully","status":"passed","title":"should handle missing API key gracefully","duration":0.35469499999999243,"failureMessages":[],"location":{"line":63,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Generation (Integration)"],"fullName":"Claude Code SDK Integration Code Generation (Integration) should generate valid GeneratedCode structure","status":"passed","title":"should generate valid GeneratedCode structure","duration":0.3614819999999952,"failureMessages":[],"location":{"line":85,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Generation (Integration)"],"fullName":"Claude Code SDK Integration Code Generation (Integration) should handle unsupported provider","status":"passed","title":"should handle unsupported provider","duration":0.17369999999999663,"failureMessages":[],"location":{"line":110,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Processing Functions"],"fullName":"Claude Code SDK Integration Code Processing Functions should properly extract content from various message formats","status":"passed","title":"should properly extract content from various message formats","duration":0.14957200000000626,"failureMessages":[],"location":{"line":125,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Code Processing Functions"],"fullName":"Claude Code SDK Integration Code Processing Functions should handle timeout scenarios gracefully","status":"passed","title":"should handle timeout scenarios gracefully","duration":0.2070009999999911,"failureMessages":[],"location":{"line":137,"column":5},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration","Research Data Integrity"],"fullName":"Claude Code SDK Integration Research Data Integrity should maintain consistent metadata collection","status":"passed","title":"should maintain consistent metadata collection","duration":0.21147100000001728,"failureMessages":[],"location":{"line":151,"column":5},"meta":{}}],"startTime":1751098524410,"endTime":1751098524413.2114,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/integration/claude-code-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should have required environment variables for testing","status":"passed","title":"should have required environment variables for testing","duration":1.0911159999999995,"failureMessages":[],"location":{"line":33,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should validate model configuration structure","status":"passed","title":"should validate model configuration structure","duration":0.4152830000000165,"failureMessages":[],"location":{"line":49,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should validate instruction structure","status":"passed","title":"should validate instruction structure","duration":0.32367999999999597,"failureMessages":[],"location":{"line":57,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should handle timeout scenarios gracefully","status":"passed","title":"should handle timeout scenarios gracefully","duration":1003.871053,"failureMessages":[],"location":{"line":64,"column":3},"meta":{}},{"ancestorTitles":["Claude Code SDK Integration Tests"],"fullName":"Claude Code SDK Integration Tests should validate error handling patterns","status":"passed","title":"should validate error handling patterns","duration":0.4703390000001946,"failureMessages":[],"location":{"line":78,"column":3},"meta":{}}],"startTime":1751098524400,"endTime":1751098525405.871,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/integration/claude-code-sdk.test.ts"},{"assertionResults":[{"ancestorTitles":["ImplementationScorer","Contract Compliance (40% weight)"],"fullName":"ImplementationScorer Contract Compliance (40% weight) should give high score for complete QiCore implementation","status":"passed","title":"should give high score for complete QiCore implementation","duration":2.0386310000000094,"failureMessages":[],"location":{"line":21,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Contract Compliance (40% weight)"],"fullName":"ImplementationScorer Contract Compliance (40% weight) should give low score for missing core types","status":"passed","title":"should give low score for missing core types","duration":0.769605999999996,"failureMessages":[],"location":{"line":62,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Contract Compliance (40% weight)"],"fullName":"ImplementationScorer Contract Compliance (40% weight) should detect missing Result operations","status":"passed","title":"should detect missing Result operations","duration":0.3697269999999975,"failureMessages":[],"location":{"line":72,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Modernity (20% weight)"],"fullName":"ImplementationScorer Modernity (20% weight) should reward modern Haskell features","status":"passed","title":"should reward modern Haskell features","duration":0.5471780000000024,"failureMessages":[],"location":{"line":86,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Modernity (20% weight)"],"fullName":"ImplementationScorer Modernity (20% weight) should penalize old-style Haskell","status":"passed","title":"should penalize old-style Haskell","duration":0.3423230000000075,"failureMessages":[],"location":{"line":107,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Completeness (30% weight)"],"fullName":"ImplementationScorer Completeness (30% weight) should reward comprehensive function coverage","status":"passed","title":"should reward comprehensive function coverage","duration":0.36946100000000115,"failureMessages":[],"location":{"line":122,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Completeness (30% weight)"],"fullName":"ImplementationScorer Completeness (30% weight) should penalize minimal implementations","status":"passed","title":"should penalize minimal implementations","duration":0.3168019999999956,"failureMessages":[],"location":{"line":138,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Quality (10% weight)"],"fullName":"ImplementationScorer Quality (10% weight) should reward comprehensive documentation","status":"passed","title":"should reward comprehensive documentation","duration":0.4956600000000009,"failureMessages":[],"location":{"line":150,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Quality (10% weight)"],"fullName":"ImplementationScorer Quality (10% weight) should detect poor code quality","status":"passed","title":"should detect poor code quality","duration":0.5567999999999955,"failureMessages":[],"location":{"line":171,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Edge Cases"],"fullName":"ImplementationScorer Edge Cases should handle empty code","status":"passed","title":"should handle empty code","duration":0.6303220000000067,"failureMessages":[],"location":{"line":185,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Edge Cases"],"fullName":"ImplementationScorer Edge Cases should handle invalid Haskell syntax","status":"passed","title":"should handle invalid Haskell syntax","duration":0.3849479999999943,"failureMessages":[],"location":{"line":194,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Edge Cases"],"fullName":"ImplementationScorer Edge Cases should handle very large code files","status":"passed","title":"should handle very large code files","duration":0.44254000000000815,"failureMessages":[],"location":{"line":200,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Score Ranges and Weights"],"fullName":"ImplementationScorer Score Ranges and Weights all scores should be between 0 and 100","status":"passed","title":"all scores should be between 0 and 100","duration":0.5005120000000005,"failureMessages":[],"location":{"line":209,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Score Ranges and Weights"],"fullName":"ImplementationScorer Score Ranges and Weights should calculate weighted average correctly","status":"passed","title":"should calculate weighted average correctly","duration":0.24572299999999814,"failureMessages":[],"location":{"line":225,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Money-Saving Validation Tests"],"fullName":"ImplementationScorer Money-Saving Validation Tests scorer should not crash on realistic generated code","status":"passed","title":"scorer should not crash on realistic generated code","duration":0.34171600000000524,"failureMessages":[],"location":{"line":241,"column":5},"meta":{}},{"ancestorTitles":["ImplementationScorer","Money-Saving Validation Tests"],"fullName":"ImplementationScorer Money-Saving Validation Tests should differentiate between good and bad implementations","status":"passed","title":"should differentiate between good and bad implementations","duration":0.3403870000000069,"failureMessages":[],"location":{"line":270,"column":5},"meta":{}}],"startTime":1751098524550,"endTime":1751098524559.3418,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/evaluation/implementation-scorer.test.ts"},{"assertionResults":[{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should initialize with API keys from environment","status":"passed","title":"should initialize with API keys from environment","duration":1.7965099999999836,"failureMessages":[],"location":{"line":42,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should handle missing API keys","status":"passed","title":"should handle missing API keys","duration":0.3009830000000022,"failureMessages":[],"location":{"line":50,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should handle empty API keys","status":"passed","title":"should handle empty API keys","duration":0.24012600000000361,"failureMessages":[],"location":{"line":61,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Constructor and Setup"],"fullName":"AICodeGenerator Utilities Constructor and Setup should handle partial API key availability","status":"passed","title":"should handle partial API key availability","duration":0.2328200000000038,"failureMessages":[],"location":{"line":71,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","getAvailableModels"],"fullName":"AICodeGenerator Utilities getAvailableModels should return array of available provider strings","status":"passed","title":"should return array of available provider strings","duration":0.1417250000000081,"failureMessages":[],"location":{"line":84,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","getAvailableModels"],"fullName":"AICodeGenerator Utilities getAvailableModels should include anthropic when API key is available","status":"passed","title":"should include anthropic when API key is available","duration":0.18518199999999752,"failureMessages":[],"location":{"line":91,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","getAvailableModels"],"fullName":"AICodeGenerator Utilities getAvailableModels should include openai when API key is available","status":"passed","title":"should include openai when API key is available","duration":0.15399700000000394,"failureMessages":[],"location":{"line":96,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Input Validation"],"fullName":"AICodeGenerator Utilities Input Validation should handle unsupported provider in generateCode","status":"passed","title":"should handle unsupported provider in generateCode","duration":0.4460640000000069,"failureMessages":[],"location":{"line":103,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Input Validation"],"fullName":"AICodeGenerator Utilities Input Validation should validate model structure","status":"passed","title":"should validate model structure","duration":0.31299300000000585,"failureMessages":[],"location":{"line":120,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Input Validation"],"fullName":"AICodeGenerator Utilities Input Validation should validate instruction structure","status":"passed","title":"should validate instruction structure","duration":0.20439000000001784,"failureMessages":[],"location":{"line":129,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Error Handling"],"fullName":"AICodeGenerator Utilities Error Handling should handle missing Anthropic API key gracefully","status":"passed","title":"should handle missing Anthropic API key gracefully","duration":0.2845010000000059,"failureMessages":[],"location":{"line":139,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Error Handling"],"fullName":"AICodeGenerator Utilities Error Handling should handle missing OpenAI API key gracefully","status":"passed","title":"should handle missing OpenAI API key gracefully","duration":0.22518800000000283,"failureMessages":[],"location":{"line":159,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Error Handling"],"fullName":"AICodeGenerator Utilities Error Handling should preserve error context in failed results","status":"passed","title":"should preserve error context in failed results","duration":0.20225999999999544,"failureMessages":[],"location":{"line":183,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Result Structure Validation"],"fullName":"AICodeGenerator Utilities Result Structure Validation should return proper GeneratedCode structure for errors","status":"passed","title":"should return proper GeneratedCode structure for errors","duration":0.2487480000000062,"failureMessages":[],"location":{"line":203,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Result Structure Validation"],"fullName":"AICodeGenerator Utilities Result Structure Validation should generate valid timestamps","status":"passed","title":"should generate valid timestamps","duration":0.1489169999999831,"failureMessages":[],"location":{"line":232,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Result Structure Validation"],"fullName":"AICodeGenerator Utilities Result Structure Validation should measure execution duration","status":"passed","title":"should measure execution duration","duration":0.16158799999999474,"failureMessages":[],"location":{"line":243,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Metadata Collection"],"fullName":"AICodeGenerator Utilities Metadata Collection should collect comprehensive metadata for all cases","status":"passed","title":"should collect comprehensive metadata for all cases","duration":0.16404899999997724,"failureMessages":[],"location":{"line":257,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Metadata Collection"],"fullName":"AICodeGenerator Utilities Metadata Collection should handle optional metadata fields","status":"passed","title":"should handle optional metadata fields","duration":0.1757170000000201,"failureMessages":[],"location":{"line":272,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Performance and Reliability"],"fullName":"AICodeGenerator Utilities Performance and Reliability should handle multiple rapid calls","status":"passed","title":"should handle multiple rapid calls","duration":0.28264999999998963,"failureMessages":[],"location":{"line":289,"column":5},"meta":{}},{"ancestorTitles":["AICodeGenerator Utilities","Performance and Reliability"],"fullName":"AICodeGenerator Utilities Performance and Reliability should maintain isolation between calls","status":"passed","title":"should maintain isolation between calls","duration":0.1851350000000025,"failureMessages":[],"location":{"line":311,"column":5},"meta":{}}],"startTime":1751098524418,"endTime":1751098524424.2827,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/generators/ai-generator-utils.test.ts"},{"assertionResults":[{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect all-zero scores pattern","status":"passed","title":"should detect all-zero scores pattern","duration":1.085403999999997,"failureMessages":[],"location":{"line":6,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect identical scores pattern","status":"passed","title":"should detect identical scores pattern","duration":0.36087600000000464,"failureMessages":[],"location":{"line":11,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect invalid score ranges","status":"passed","title":"should detect invalid score ranges","duration":0.6135299999999972,"failureMessages":[],"location":{"line":18,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should calculate failure rate correctly","status":"passed","title":"should calculate failure rate correctly","duration":0.1828699999999941,"failureMessages":[],"location":{"line":25,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should calculate standard deviation for variance detection","status":"passed","title":"should calculate standard deviation for variance detection","duration":0.2370509999999939,"failureMessages":[],"location":{"line":34,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should pass normal score distributions","status":"passed","title":"should pass normal score distributions","duration":0.2614640000000037,"failureMessages":[],"location":{"line":44,"column":3},"meta":{}},{"ancestorTitles":["Circuit Breaker Logic Validation"],"fullName":"Circuit Breaker Logic Validation should detect suspicious low variance with low scores","status":"passed","title":"should detect suspicious low variance with low scores","duration":0.1971550000000093,"failureMessages":[],"location":{"line":66,"column":3},"meta":{}}],"startTime":1751098525512,"endTime":1751098525515.2615,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/runners/circuit-breaker.test.ts"},{"assertionResults":[{"ancestorTitles":["Study Type Validation","studyConfigSchema"],"fullName":"Study Type Validation studyConfigSchema should validate a complete study configuration","status":"passed","title":"should validate a complete study configuration","duration":3.8085609999999974,"failureMessages":[],"location":{"line":18,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyConfigSchema"],"fullName":"Study Type Validation studyConfigSchema should reject configuration with invalid runs per combination","status":"passed","title":"should reject configuration with invalid runs per combination","duration":1.690874000000008,"failureMessages":[],"location":{"line":55,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyConfigSchema"],"fullName":"Study Type Validation studyConfigSchema should use default values for optional fields","status":"passed","title":"should use default values for optional fields","duration":0.4901529999999923,"failureMessages":[],"location":{"line":89,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","aiModelSchema"],"fullName":"Study Type Validation aiModelSchema should validate standard AI model configurations","status":"passed","title":"should validate standard AI model configurations","duration":0.4103099999999813,"failureMessages":[],"location":{"line":124,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","aiModelSchema"],"fullName":"Study Type Validation aiModelSchema should reject model with invalid provider","status":"passed","title":"should reject model with invalid provider","duration":0.31037699999998836,"failureMessages":[],"location":{"line":152,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","instructionSetSchema"],"fullName":"Study Type Validation instructionSetSchema should validate instruction set with file path","status":"passed","title":"should validate instruction set with file path","duration":0.22647099999997522,"failureMessages":[],"location":{"line":172,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","instructionSetSchema"],"fullName":"Study Type Validation instructionSetSchema should validate instruction set with inline content","status":"passed","title":"should validate instruction set with inline content","duration":0.22688700000000495,"failureMessages":[],"location":{"line":190,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","qualityScoresSchema"],"fullName":"Study Type Validation qualityScoresSchema should validate quality scores within valid range","status":"passed","title":"should validate quality scores within valid range","duration":0.8077320000000157,"failureMessages":[],"location":{"line":211,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","qualityScoresSchema"],"fullName":"Study Type Validation qualityScoresSchema should reject scores outside valid range","status":"passed","title":"should reject scores outside valid range","duration":0.8880450000000053,"failureMessages":[],"location":{"line":234,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","generationResultSchema"],"fullName":"Study Type Validation generationResultSchema should validate complete generation result","status":"passed","title":"should validate complete generation result","duration":1.2054139999999904,"failureMessages":[],"location":{"line":259,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyStatisticsSchema"],"fullName":"Study Type Validation studyStatisticsSchema should validate comprehensive study statistics","status":"passed","title":"should validate comprehensive study statistics","duration":1.4423049999999762,"failureMessages":[],"location":{"line":306,"column":5},"meta":{}},{"ancestorTitles":["Study Type Validation","studyStatisticsSchema"],"fullName":"Study Type Validation studyStatisticsSchema should reject invalid statistics","status":"passed","title":"should reject invalid statistics","duration":0.8276009999999872,"failureMessages":[],"location":{"line":358,"column":5},"meta":{}}],"startTime":1751098524549,"endTime":1751098524561.8276,"status":"passed","message":"","name":"/home/zzhang/dev/qi/github/mcp-server/qicore-v4/typescript/study/tests/unit/types/study.test.ts"}]}